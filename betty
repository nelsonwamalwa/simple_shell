int main(void) {
    char *command = NULL;
    size_t commandSize = 0;

    while (1) {
        ssize_t bytesRead;
        pid_t childPid;
        char *args[MAX_ARGS];
        int argCount = 0;

        displayPrompt();
        bytesRead = getCommand(&command, &commandSize);
        if (bytesRead == -1) {
            if (feof(stdin)) {
                break;
            }
            perror("Input error");
            clearerr(stdin);
            continue;
        }
        if (command[bytesRead - 1] == '\n') {
            command[bytesRead - 1] = '\0';
        }
        char *token = strtok(command, " ");
        while (token != NULL && argCount < MAX_ARGS - 1) {
            args[argCount++] = token;
            token = strtok(NULL, " ");
        }
        args[argCount] = NULL;
        childPid = fork();
        if (childPid < 0) {
            perror("Fork error");
        } else if (childPid == 0) {
            executeCommand(args);
        } else {
            waitForChildProcess(childPid);
        }
    }
    free(command);
    return (0);
}